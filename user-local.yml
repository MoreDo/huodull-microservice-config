server:
  port: 9091

swagger:
  package: com.lbd.cloud.service.user.controller
  title: 用户中心
  description: 用户中心微服务
  termsOfServiceUrl: https://github.com/MoreDo
  contact:
    name: MoreDo
    url: https://github.com/MoreDo
    email: 419092109@qq.com
  version: 1.0

spring:
  aop:
    proxy-target-class: true
  zipkin:
    base-url: http://192.168.8.65:7411
    enabled: false
  datasource:
    url: jdbc:mysql://192.168.8.20:3306/user?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&useOldAliasMetadataBehavior=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    max-active: 20
    max-idle: 8
    min-idle: 8
    initial-size: 10
    #指定连接多久没被使用时，被设置为空闲，默认为10ms
    idle-timeout: 10
    #验证连接的有效性
    test-while-idle: true
    validation-query: select 1 from dual
    #空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
    time-between-eviction-runs-millis: 300000
    #连接池空闲连接的有效时间 ，设置30分钟
    min-evictable-idle-time-millis: 1800000
  cloud:
    stream:
      defaultBinder: defaultRabbit
      bindings:
        user-store-bind:
          destination: user-store-bind
          group: user-store-bind
        user-store-bind-callback:
          destination: user-store-bind-callback
          group: user-store-bind-callback
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
             rabbitmq:
              host: 192.168.8.65
              port: 5672
              username: rabbitadmin
              password: 123456
              virtual-host: /
  rabbitmq:
    host: 192.168.8.65
    port: 5672
    username: rabbitadmin
    password: 123456
    virtual-host: /

eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.8.65:8761/eureka/
  instance:
    appname: user
    metadata-map:
      cluster: lbd-cluster

mybatis:
  type-aliases-package: com.lbd.cloud.service.user.entity

security:
  oauth2:
    client:
      accessTokenUri: http://192.168.8.66:10000/uua/oauth/token
      userAuthorizationUri: http://192.168.8.66:10000/uua/oauth/authorize
      clientId: user
      clientSecret: user2017
    resource:
      token-info-uri: http://192.168.8.66:10000/uua/oauth/check_token
      prefer-token-info: true
      user-info-uri: http://192.168.8.66:10000/uua/user
      id: user