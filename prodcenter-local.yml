server:
  port: 9095

swagger:
  package: com.lbd.cloud.service.prodcenter.controller
  title: 商品中心
  description: 商品中心微服务
  termsOfServiceUrl: https://github.com/MoreDo
  contact:
    name: MoreDo
    url: https://github.com/MoreDo
    email: 419092109@qq.com
  version: 1.0

spring:
  aop:
    proxy-target-class: true
  zipkin:
    base-url: http://192.168.8.65:7411
    enabled: false
  datasource:
    url: jdbc:mysql://192.168.8.65:3306/prodcenter?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&useOldAliasMetadataBehavior=true
    username: root
    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    initial-size: 10
    #验证连接的有效性
    test-while-idle: true
    validation-query: select 1 from dual
    #指定连接多久没被使用时，被设置为空闲，默认为10ms
    idle-timeout: 10
    #空闲连接回收的时间间隔，与test-while-idle一起使用，设置5分钟
    time-between-eviction-runs-millis: 300000
    #连接池空闲连接的有效时间 ，设置30分钟
    min-evictable-idle-time-millis: 1800000
  redis:
    topic: __keyevent@0__:expired
    # Redis数据库索引（默认为0），用第2个数据库索引
    database: 0
    # Redis服务器地址
    host: 192.168.8.65
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 0
    pool:
      # 连接池最大连接数（使用负值表示没有限制）
      max-active: 8
      # 连接池中的最小空闲连接
      min-idle: 0
      # 连接池中的最大空闲连接
      max-idle: 8
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: -1
  cloud:
    stream:
      defaultBinder: defaultRabbit
      bindings:
        userprod-create:                    # 对应 channel
          destination: userprod-create      # 目的，对应 MQ 是 exchange， 生成临时队列
          group: userprod-create             # 具体分组 对应 MQ 是 队列名称 并且持久化队列
        userprod-create-callback:
          destination: userprod-create-callback
          group: userprod-create-callback
        userprod-pub-status-notice:
          destination: userprod-pub-status-notice
          group: userprod-pub-status-notice
        stockout:
          destination: stockout
          group: prodcenter
        stockout-callback:
          destination: stockout-callback
        #订阅风险词监测消息
        risk_words-monitor:
          destination: risk_words-monitor
          group: prodcenter
        #风险词监测回调消息
        risk_words-monitor-callback:
          destination: risk_words-monitor-callback
        #订阅风险词处理消息
        risk_words-process:
          destination: risk_words-process
          group: prodcenter
        #风险词处理回调消息
        risk_words-process-callback:
          destination: risk_words-process-callback
        #订阅源店铺过滤监测消息
        filter_store-monitor:
          destination: filter_store-monitor
          group: prodcenter
        #源店铺过滤监测回调消息
        filter_store-monitor-callback:
          destination: filter_store-monitor-callback
        #订阅源店铺过滤处理消息
        filter_store-process:
          destination: filter_store-process
          group: prodcenter
        #源店铺过滤处理回调消息
        filter_store-process-callback:
          destination: filter_store-process-callback
      binders:
        defaultRabbit:
          type: rabbit
          environment:
            spring:
             rabbitmq:
              host: 192.168.8.65
              port: 5672
              username: rabbitadmin
              password: 123456
              virtual-host: /
  rabbitmq:
    host: 192.168.8.65
    port: 5672
    username: rabbitadmin
    password: 123456
    virtual-host: /
eureka:
  client:
    serviceUrl:
      defaultZone: http://192.168.8.65:8761/eureka/
  instance:
    appname: prodcenter
    metadata-map:
      cluster: lbd-cluster

mybatis:
  type-aliases-package: com.lbd.**.entity

security:
  oauth2:
    client:
      accessTokenUri: http://192.168.8.66:10000/uua/oauth/token
      userAuthorizationUri: http://192.168.8.66:10000/uua/oauth/authorize
      clientId: prodcenter
      clientSecret: prodcenter2017
    resource:
      token-info-uri: http://192.168.8.66:10000/uua/oauth/check_token
      prefer-token-info: true
      user-info-uri: http://192.168.8.66:10000/uua/user
      id: prodcenter